{"version":3,"sources":["components/Planner/Task.js","components/Planner/ClassHolder.js","components/Planner/Semester.js","data/rotation_cleaned.csv","helper/csvParser.js","data/initial-data.js","helper/rotationHelper.js","components/Planner/Planner.js","components/Questions/Tabs/Instructions.js","components/Questions/Tabs/RestrictedCourses.js","components/Questions/Tabs/DegreePath.js","components/Questions/Tabs/CompletedCourses.js","components/Questions/Tabs/WaivedCourses.js","components/Questions/QuestionTabs.js","components/AdvisorRouter.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","index","draggableId","id","provided","snapshot","ListItem","draggableProps","dragHandleProps","ref","innerRef","sx","margin","theme","spacing","boxShadow","borderRadius","maxWidth","display","backgroundColor","isDragging","ListItemText","primary","content","ClassHolder","column","tasks","isDropDisabled","isActive","Paper","width","padding","overflowY","paddingTop","Typography","variant","position","top","zIndex","flexDirection","background","title","droppableId","List","droppableProps","flexGrow","minHeight","map","placeholder","ColumnType","fixed","height","border","borderColor","parseCSVFile","file","Promise","resolve","reject","Papa","parse","download","header","complete","results","data","error","err","initialData","classes","columns","taskIds","columnOrder","csvClassNumbers","a","courses","forEach","course","String","courseNum","courseName","push","rotation","rotationCourses","Number","alert","cClass","filteredData","restrictedCourses","filter","c","restricted","restrictedCourseNums","fc","Object","entries","reduce","acc","k","v","includes","_union","isOffered","classId","semesterId","response","found","Semesters","split","s","startsWith","year","n","Math","abs","isOdd","e","console","Planner","setData","tabInfo","csvData","useState","availableCols","setAvailableCols","useEffect","newData","keys","reverse","t","r","substring","completed","waived","availableClasses","availableTasks","useMemo","taskId","onDragEnd","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","sort","newTaskIds","newColumn","onDragStart","cols","key","Container","maxHeight","marginRight","palette","grey","flexWrap","justifyContent","columnId","Box","paddingLeft","Instructions","marginTop","marginBottom","Link","target","href","fontSize","lineHeight","RestrictedCourses","setTabInfo","handleChange","checked","newArray","slice","newTabInfo","filteredArray","item","options","label","subject","charAt","FormControlLabel","component","control","Checkbox","value","onChange","my","FormGroup","DegreePath","handleChangeCert","certificates","handleChangeDeg","degreePath","FormControl","FormLabel","RadioGroup","defaultValue","name","Radio","CompletedCourses","newCompCourses","WaivedCourses","core","TabPanel","props","children","other","role","hidden","p","a11yProps","QuestionTabs","setValue","borderBottom","Tabs","event","newValue","scrollButtons","Tab","AdvisorRouter","setCsvData","getAvailableClasses","then","csvClasses","path","RouterLink","to","formatTitle","toUpperCase","LinkRouter","App","useRouteMatch","pathnames","useLocation","pathname","x","umslRed","Breadcrumbs","underline","color","text","secondary","last","length","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","mode","typography","h1","h2","h3","h4","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","log"],"mappings":"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","file":"static/js/main.a85bc0c1.chunk.js","sourcesContent":["import ListItem from \"@mui/material/ListItem\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\n\r\nexport default function Task({ task, index }) {\r\n  return (\r\n    <Draggable draggableId={task?.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <ListItem\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          sx={{\r\n            margin: (theme) => theme.spacing(1),\r\n            boxShadow: 1,\r\n            borderRadius: 1,\r\n            maxWidth: 240,\r\n            display: \"flex\",\r\n            backgroundColor: snapshot.isDragging ? \"lightgreen\" : \"white\",\r\n          }}\r\n        >\r\n          <ListItemText primary={task?.content} />\r\n        </ListItem>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Task from \"./Task\";\r\n\r\nexport default function ClassHolder({\r\n  column,\r\n  tasks,\r\n  isDropDisabled,\r\n  isActive,\r\n}) {\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        margin: (theme) => theme.spacing(1),\r\n        width: 300,\r\n        padding: 1,\r\n        overflowY: \"scroll\",\r\n        paddingTop: 0,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"white\",\r\n          padding: 1,\r\n        }}\r\n      >\r\n        {column.title}\r\n      </Typography>\r\n      <Droppable droppableId={column.id} isDropDisabled={isDropDisabled}>\r\n        {(provided, snapshot) => (\r\n          <List\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            sx={{\r\n              flexGrow: 1,\r\n              minHeight: 100,\r\n            }}\r\n          >\r\n            {tasks.map((task, index) => (\r\n              <Task key={task.id} task={task} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Task from \"./Task\";\r\n\r\nexport default function ColumnType({\r\n  column,\r\n  tasks,\r\n  isDropDisabled,\r\n  isActive,\r\n}) {\r\n  return (\r\n    <Paper\r\n      fixed\r\n      sx={{\r\n        margin: (theme) => theme.spacing(1),\r\n        width: 300,\r\n        padding: 1,\r\n        display: \"flex\",\r\n        height: 240,\r\n        flexDirection: \"column\",\r\n        overflowY: \"scroll\",\r\n        border: isActive ? 3 : 0,\r\n        borderColor: \"green\",\r\n        paddingTop: 0,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h4\"\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 2,\r\n          background: \"white\",\r\n          padding: 1,\r\n        }}\r\n      >\r\n        {column.title}\r\n      </Typography>\r\n      <Droppable droppableId={column.id} isDropDisabled={isDropDisabled}>\r\n        {(provided, snapshot) => (\r\n          <List\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            sx={{\r\n              borderRadius: 1,\r\n              flexGrow: 1,\r\n              minHeight: 100,\r\n            }}\r\n          >\r\n            {tasks.map((task, index) => (\r\n              <Task key={task.id} task={task} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </Paper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rotation_cleaned.58311e3f.csv\";","import Papa from \"papaparse\";\r\n\r\nexport default function parseCSVFile(file) {\r\n  return new Promise((resolve, reject) => {\r\n    Papa.parse(file, {\r\n      download: true,\r\n      header: true,\r\n      complete(results) {\r\n        resolve(results.data);\r\n      },\r\n      error(err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  });\r\n}\r\n","const initialData = {\r\n  classes: {},\r\n  columns: {\r\n    \"available-classes\": {\r\n      id: \"available-classes\",\r\n      title: \"Available Classes\",\r\n      taskIds: [],\r\n    },\r\n    \"SP-2022\": {\r\n      id: \"SP-2022\",\r\n      title: \"Spring 2022\",\r\n      taskIds: [],\r\n    },\r\n    \"SS-2022\": {\r\n      id: \"SS-2022\",\r\n      title: \"Summer 2022\",\r\n      taskIds: [],\r\n    },\r\n    \"FS-2022\": {\r\n      id: \"FS-2022\",\r\n      title: \"Fall 2022\",\r\n      taskIds: [],\r\n    },\r\n    \"SP-2023\": {\r\n      id: \"SP-2023\",\r\n      title: \"Spring 2023\",\r\n      taskIds: [],\r\n    },\r\n    \"SS-2023\": {\r\n      id: \"SS-2023\",\r\n      title: \"Summer 2023\",\r\n      taskIds: [],\r\n    },\r\n    \"FS-2023\": {\r\n      id: \"FS-2023\",\r\n      title: \"Fall 2023\",\r\n      taskIds: [],\r\n    },\r\n    \"SP-2024\": {\r\n      id: \"SP-2024\",\r\n      title: \"Spring 2024\",\r\n      taskIds: [],\r\n    },\r\n    \"SS-2024\": {\r\n      id: \"SS-2024\",\r\n      title: \"Summer 2024\",\r\n      taskIds: [],\r\n    },\r\n    \"FS-2024\": {\r\n      id: \"FS-2024\",\r\n      title: \"Fall 2024\",\r\n      taskIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\r\n    \"SP-2022\",\r\n    \"SS-2022\",\r\n    \"FS-2022\",\r\n    \"SP-2023\",\r\n    \"SS-2023\",\r\n    \"FS-2023\",\r\n    \"SP-2024\",\r\n    \"SS-2024\",\r\n    \"FS-2024\",\r\n  ],\r\n};\r\n\r\nexport default initialData;\r\n","import courses from \"../data/ClassInfo.json\";\r\nimport rotation from \"../data/rotation_cleaned.csv\";\r\nimport parseCSVFile from \"./csvParser.js\";\r\nimport initialData from \"../data/initial-data\";\r\nimport _union from \"lodash/union\";\r\n\r\nexport async function csvClassNumbers() {\r\n  courses.forEach((course) => {\r\n    const id = String(course.courseNum);\r\n    initialData.classes[id] = {\r\n      id,\r\n      content: `CS ${id} - ${course.courseName}`,\r\n    };\r\n    initialData.columns[\"available-classes\"].taskIds.push(id);\r\n  });\r\n\r\n  try {\r\n    var data = await parseCSVFile(rotation);\r\n    const rotationCourses = data.map((a) => {\r\n      return a.Number;\r\n    });\r\n    return rotationCourses;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport async function csvClasses() {\r\n  courses.forEach((course) => {\r\n    const id = String(course.courseNum);\r\n    initialData.classes[id] = {\r\n      id,\r\n      content: `CS ${id} - ${course.courseName}`,\r\n    };\r\n    initialData.columns[\"available-classes\"].taskIds.push(id);\r\n  });\r\n\r\n  try {\r\n    var data = await parseCSVFile(rotation);\r\n    return data;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport async function getAvailableClasses() {\r\n  const cClass = await csvClassNumbers();\r\n  const filteredData = { ...initialData };\r\n  const restrictedCourses = courses.filter((c) => c.restricted);\r\n  const restrictedCourseNums = restrictedCourses.map((fc) =>\r\n    String(fc.courseNum)\r\n  );\r\n\r\n  filteredData.classes = Object.entries(initialData.classes).reduce(\r\n    (acc, [k, v]) => {\r\n      if (restrictedCourseNums?.includes(k) || cClass?.includes(k)) {\r\n        return { ...acc, [k]: v };\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n  filteredData.columns[\"available-classes\"].taskIds = _union(\r\n    restrictedCourseNums,\r\n    cClass\r\n  );\r\n  return filteredData;\r\n}\r\n\r\n/*\r\n * semester comes in as semester-year\r\n * FS = fall\r\n * SS = summer\r\n * SP = spring\r\n * Example: FS-2022\r\n */\r\nexport function isOffered(classId, semesterId, classes) {\r\n  try {\r\n    let response = false;\r\n    let found = false;\r\n    classes.forEach((c) => {\r\n      if (c.Number === classId) {\r\n        found = true;\r\n        const offeredSemesters = c.Semesters.split(\" \");\r\n        offeredSemesters.forEach((s) => {\r\n          if (semesterId.startsWith(s)) {\r\n            if (c[\"even or odd\"]) {\r\n              const year = semesterId.split(\"-\")[1];\r\n              if (isEven(year) && c[\"even or odd\"] === \"even\") {\r\n                response = true;\r\n              }\r\n              if (isOdd(year) && c[\"even or odd\"] === \"odd\") {\r\n                response = true;\r\n              }\r\n            } else {\r\n              response = true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (!found) {\r\n      return true;\r\n    }\r\n    return response;\r\n  } catch (e) {\r\n    console.error(`error in rotationHelper.js/isOffered`, e);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction isEven(n) {\r\n  return n % 2 === 0;\r\n}\r\nfunction isOdd(n) {\r\n  return Math.abs(n % 2) === 1;\r\n}\r\n","import { Container } from \"@mui/material\";\r\nimport { useState, useMemo, useEffect } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport ClassHolder from \"./ClassHolder\";\r\nimport Semester from \"./Semester\";\r\nimport { Paper } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { isOffered } from \"../../helper/rotationHelper.js\";\r\n\r\nexport default function Planner({ data, setData, tabInfo, csvData }) {\r\n  const [availableCols, setAvailableCols] = useState(null);\r\n\r\n  //Useful for debugging\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"tabInfoPlanner: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  // filter out completed / waived courses\r\n  useEffect(() => {\r\n    let newData = { ...data };\r\n    newData.columns[\"available-classes\"].taskIds = Object.keys(\r\n      newData.classes\r\n    ).reverse();\r\n    Object.entries(newData.columns).forEach(\r\n      (c) =>\r\n        (c[1].taskIds = c[1].taskIds.filter(\r\n          (t) =>\r\n            !tabInfo?.restricted.map((r) => (r = r.substring(1))).includes(t) &&\r\n            !tabInfo?.completed.map((r) => (r = r.substring(1))).includes(t) &&\r\n            !tabInfo?.waived.map((r) => (r = r.substring(1))).includes(t)\r\n        ))\r\n    );\r\n    setData(newData);\r\n  }, [tabInfo]);\r\n\r\n  const onDragStart = ({ draggableId }) => {\r\n    if (!csvData) {\r\n      return;\r\n    }\r\n\r\n    const cols = [];\r\n    data.columnOrder.forEach((key) => {\r\n      if (isOffered(draggableId, key, csvData)) {\r\n        cols.push(key);\r\n      }\r\n    });\r\n    cols.push(\"available-classes\");\r\n    setAvailableCols(cols);\r\n  };\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    setAvailableCols(null);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const start = data.columns[source.droppableId];\r\n    const finish = data.columns[destination.droppableId];\r\n\r\n    if (start === finish) {\r\n      const newTaskIds = Array.from(start.taskIds);\r\n      newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        taskIds: newTaskIds.sort().reverse(),\r\n      };\r\n\r\n      const newData = {\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setData(newData);\r\n      return;\r\n    }\r\n\r\n    const startTaskIds = Array.from(start.taskIds);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      taskIds: startTaskIds,\r\n    };\r\n\r\n    const finishTaskIds = Array.from(finish.taskIds);\r\n    finishTaskIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      taskIds: finishTaskIds.sort().reverse(),\r\n    };\r\n\r\n    const newData = {\r\n      ...data,\r\n      columns: {\r\n        ...data.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  const availableClasses = data.columns[\"available-classes\"];\r\n  const availableTasks = useMemo(\r\n    () => availableClasses.taskIds.map((taskId) => data.classes[taskId]),\r\n    [availableClasses.taskIds, data.classes]\r\n  );\r\n\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={onDragEnd}\r\n      onDragStart={onDragStart}\r\n      sx={{ display: \"flex\" }}\r\n    >\r\n      <Container maxWidth={false} sx={{ display: \"flex\" }}>\r\n        <Paper\r\n          sx={{\r\n            display: \"flex\",\r\n            maxHeight: 750,\r\n            marginRight: 10,\r\n            position: \"sticky\",\r\n            top: 0,\r\n            backgroundColor: (theme) => theme.palette.grey[400],\r\n          }}\r\n        >\r\n          <ClassHolder\r\n            key={availableClasses.id}\r\n            column={availableClasses}\r\n            tasks={availableTasks}\r\n          />\r\n        </Paper>\r\n\r\n        <Paper\r\n          sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            backgroundColor: (theme) => theme.palette.grey[400],\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {data.columnOrder.map((columnId, index) => {\r\n            const column = data.columns[columnId];\r\n            const tasks = column.taskIds.map((taskId) => data.classes[taskId]);\r\n\r\n            const isDropDisabled = !availableCols?.includes(column.id);\r\n\r\n            return (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  paddingLeft: 0,\r\n                }}\r\n                key={column.id}\r\n                column={column}\r\n                tasks={tasks}\r\n              >\r\n                <Semester\r\n                  key={column.id}\r\n                  column={column}\r\n                  tasks={tasks}\r\n                  isDropDisabled={isDropDisabled}\r\n                  isActive={availableCols?.includes(column.id)}\r\n                />\r\n              </Box>\r\n            );\r\n          })}\r\n        </Paper>\r\n      </Container>\r\n    </DragDropContext>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\nexport default function Instructions() {\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Welcome to the M.S. in Computer Science Advisor</Typography>\r\n      <Typography>This tool can help MS Computer Science students plan their program so that they may meet \r\n        their <Link target = \"_blank\" href = \"http://www.umsl.edu/cmpsci/graduate-studies/ms-compsci.html\"> Course Requirements</Link>  within a desired time span. The tool can be used by new or existing students.</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 30,\r\n          lineHeight: 2,\r\n          }} > Instructions: Degree planning is done in two stages</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 24,\r\n          lineHeight: 1.5,\r\n          }}>Course Details:</Typography>\r\n      <Typography>Please use the DEGREE PATHS tab to select your desired degree from the options listed. Then use the COURSES tabs to determine which courses will be required for your selected degree.</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 24,\r\n          lineHeight: 1.5,\r\n          }}>Course Planning:</Typography>\r\n      <Typography>In the course selection section, students will choose which courses they plan to take to complete their CS Masters degree. The course information that facilitates planning comes from two \r\n        primary sources: the upcoming scheduled courses available in MyView for registration, and the course rotation, which include the standard 3-year rotation and unofficial rotation. Courses not listed in either \r\n        rotation can still be planned as unspecified elective. <Link target = \"_blank\" href = \"https://bulletin.umsl.edu/artsandsciences/computerscience/#courseinventory\"> Click here for a full list of CMP SCI Courses</Link></Typography>      \r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\n\r\nexport default function RestrictedCourses({ tabInfo, setTabInfo }) {\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.restricted.slice();\r\n      newArray.push(e.target.id);\r\n      const newTabInfo = {...tabInfo, restricted: newArray};\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.restricted.slice();\r\n      let filteredArray = newArray.filter(item => item !== e.target.id);\r\n      const newTabInfo = {...tabInfo, restricted: filteredArray};\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  }\r\n\r\n  const options = courses.filter((v) => v.restricted).map((item) => {\r\n    let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n    let id = `${item.subject.charAt(0)}${item.courseNum}`;\r\n    let checked = tabInfo.restricted.includes(id);\r\n\r\n    return (\r\n      <FormControlLabel\r\n        key={id}\r\n        //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n        component={'span'}\r\n        label={label}\r\n        control={\r\n          <Checkbox \r\n            id={id} \r\n            checked={checked} \r\n            value={item} \r\n            onChange={handleChange}\r\n          />}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        my: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Restricted Courses</Typography>\r\n      <Typography>\r\n        Select restricted courses already completed/in progress\r\n      </Typography>\r\n      <FormGroup>{options}</FormGroup>\r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { useEffect } from \"react\";\r\nimport certificates from \"../../../data/Certificates.json\";\r\n\r\nexport default function DegreePath({ tabInfo, setTabInfo }) {\r\n  const handleChangeCert = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.certificates.slice();\r\n      newArray.push(e.target.value);\r\n      const newTabInfo = {...tabInfo, certificates: newArray};\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.certificates.slice();\r\n      let filteredArray = newArray.filter(item => item !== e.target.value);\r\n      const newTabInfo = {...tabInfo, certificates: filteredArray};\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  }\r\n\r\n  const handleChangeDeg = (e) => {\r\n    const newTabInfo = {...tabInfo, degreePath: e.target.value};\r\n    setTabInfo(newTabInfo);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n      console.log(\"checkedItemsDegPath: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Degree paths</Typography>\r\n      <Typography>Please select your desired degree path.</Typography>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Degree Path:</FormLabel>\r\n        <RadioGroup defaultValue=\"traditional\" name=\"type-path-group\">\r\n          <FormControlLabel\r\n            value=\"traditional\"\r\n            checked={tabInfo.degreePath === \"traditional\"}\r\n            control={<Radio onChange={handleChangeDeg}/>}\r\n            label=\"Traditional\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"professional\"\r\n            checked={tabInfo.degreePath === \"professional\"}\r\n            control={<Radio onChange={handleChangeDeg}/>}\r\n            label=\"Professional\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"certificate\"\r\n            checked={tabInfo.degreePath === \"certificate\"}\r\n            control={<Radio onChange={handleChangeDeg}/>}\r\n            label=\"Certificate\"\r\n          />\r\n        </RadioGroup>\r\n\r\n        <FormLabel component=\"legend\">Certificate Options:</FormLabel>\r\n\r\n        <FormGroup>\r\n          {certificates.map((item) => {\r\n            let checked = tabInfo.certificates.includes(item.value);\r\n\r\n            return (\r\n              <FormControlLabel\r\n                key={item.value}\r\n                component={'span'}\r\n                label={item.label}\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    value={item.value}\r\n                    onChange={handleChangeCert}\r\n                  />}\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n      </FormControl>\r\n      <br></br>\r\n      <br></br>\r\n      <Typography variant= \"h5\" display = \"block\"> Additional information can be found here:</Typography>\r\n      <Typography variant = \"overline\" display = \"block\"><Link target = \"_blank\" href = \"http://www.umsl.edu/cmpsci/graduate-studies/graduate-degree-programs.html\"> Click here for Graduate Degree Programs</Link></Typography>\r\n      <Typography variant = \"overline\" display = \"block\"><Link target = \"_blank\" href = \"http://www.umsl.edu/cmpsci/certificates/graduate-certificates.html\"> Click here for Graduate Certificate Rules</Link></Typography>\r\n\r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport { useEffect } from \"react\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\n\r\nexport default function CompletedCourses({ tabInfo, setTabInfo }) {\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      //Copy to a new array and push the new item to it\r\n      //Then add the new array to the state object and update\r\n      //If there's a fancy way of doing this, please change it\r\n      let newArray = tabInfo.completed.slice();\r\n      newArray.push(e.target.id);\r\n      const newCompCourses = { ...tabInfo, completed: newArray };\r\n      setTabInfo(newCompCourses);\r\n    } else {\r\n      let newArray = tabInfo.completed.slice();\r\n      let filteredArray = newArray.filter((item) => item !== e.target.id);\r\n      const newCompCourses = { ...tabInfo, completed: filteredArray };\r\n      setTabInfo(newCompCourses);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"checkedItemsCompTab: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  const options = courses\r\n    .filter((v) => !v.restricted)\r\n    .map((item) => {\r\n      let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n      let id = `${item.subject.charAt(0)}${item.courseNum}`;\r\n      let checked = tabInfo.completed.includes(id);\r\n\r\n      return (\r\n        <FormControlLabel\r\n          key={id}\r\n          //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n          component={\"span\"}\r\n          label={label}\r\n          control={\r\n            <Checkbox\r\n              id={id}\r\n              checked={checked}\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n          }\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Completed and Transferred Courses</Typography>\r\n      <Typography>Select courses already completed/in progress</Typography>\r\n      <FormGroup>{options}</FormGroup>\r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\n\r\n\r\nexport default function WaivedCourses({ tabInfo, setTabInfo }) {\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.waived.slice();\r\n      newArray.push(e.target.id);\r\n      const newTabInfo = {...tabInfo, waived: newArray};\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.waived.slice();\r\n      let filteredArray = newArray.filter(item => item !== e.target.id);\r\n      const newTabInfo = {...tabInfo, waived: filteredArray};\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  }\r\n   \r\n  const options = courses.filter((v) => v.core).map((item) => {\r\n    let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n    let id = `${item.subject.charAt(0)}${item.courseNum}`;\r\n    let checked = tabInfo.waived.includes(id);\r\n\r\n    return (\r\n      <FormControlLabel\r\n        key={id}\r\n        //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n        component={'span'}\r\n        label={label}\r\n        control={\r\n          <Checkbox \r\n            id={id} \r\n            checked={checked} \r\n            value={item} \r\n            onChange={handleChange}\r\n          />}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Waived Courses</Typography>\r\n      <Typography>Select waived courses already completed/in progress</Typography>\r\n      <FormGroup>\r\n        {options}\r\n      </FormGroup>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Instructions from \"./Tabs/Instructions\";\r\nimport RestrictedCourses from \"./Tabs/RestrictedCourses\";\r\nimport DegreePath from \"./Tabs/DegreePath\";\r\nimport CompletedCourses from \"./Tabs/CompletedCourses\";\r\nimport WaivedCourses from \"./Tabs/WaivedCourses\";\r\nimport Required6000Courses from \"./Tabs/Required6000Courses\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: \"0.5rem\" }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function QuestionTabs({ tabInfo, setTabInfo }) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs value={value} onChange={handleChange} variant=\"scrollable\" scrollButtons=\"auto\">\r\n          <Tab label=\"Instructions\" {...a11yProps(0)} />\r\n          <Tab label=\"Degree Paths\" {...a11yProps(1)} />\r\n          <Tab label=\"Restricted Courses\" {...a11yProps(2)} />\r\n          <Tab label=\"Completed Courses\" {...a11yProps(3)} />\r\n          <Tab label=\"Waived Courses\" {...a11yProps(4)} />\r\n          {/* <Tab label=\"6000 Level Required Courses\" {...a11yProps(5)} /> */}\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <Instructions />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <DegreePath \r\n          tabInfo={tabInfo} \r\n          setTabInfo={setTabInfo}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RestrictedCourses \r\n          tabInfo={tabInfo} \r\n          setTabInfo={setTabInfo}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <CompletedCourses tabInfo={tabInfo} setTabInfo={setTabInfo} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <WaivedCourses \r\n          tabInfo={tabInfo} \r\n          setTabInfo={setTabInfo}/>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={5}>\r\n        <Required6000Courses />\r\n      </TabPanel> */}\r\n    </Box>\r\n  );\r\n}\r\n","import { Switch, Route, Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Planner from \"./Planner/Planner\";\r\nimport QuestionTabs from \"./Questions/QuestionTabs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { getAvailableClasses, csvClasses } from \"../helper/rotationHelper.js\";\r\n\r\nexport default function AdvisorRouter() {\r\n  let tabInfoInitial = {\r\n    degreePath: \"traditional\",\r\n    certificates: [],\r\n    completed: [], \r\n    restricted: [], \r\n    waived: []\r\n  }\r\n  const [data, setData] = useState(null);\r\n  const [tabInfo, setTabInfo] = useState(tabInfoInitial);\r\n  const [csvData, setCsvData] = useState(null);\r\n\r\n  //Filter out courses\r\n  useEffect(() => {\r\n    getAvailableClasses().then((data) => setData(data));\r\n    csvClasses().then((data) => setCsvData(data));\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/planner\">\r\n        {data ? <Planner \r\n          data={data} \r\n          setData={setData}\r\n          csvData={csvData}\r\n          tabInfo={tabInfo}\r\n        /> : null}\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Link\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          width=\"100%\"\r\n          component={RouterLink}\r\n          to=\"/planner\"\r\n        >\r\n          Course Planning\r\n        </Link>\r\n        <QuestionTabs \r\n          tabInfo={tabInfo} \r\n          setTabInfo={setTabInfo}\r\n        />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AdvisorRouter from \"./components/AdvisorRouter\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport {\r\n  Link as RouterLink,\r\n  useRouteMatch,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\n\r\nfunction formatTitle(title) {\r\n  if (!title) return \"Dashboard\";\r\n  return title.charAt(0).toUpperCase() + title.slice(1);\r\n}\r\n\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\n\r\nexport default function App() {\r\n  const match = useRouteMatch(\"/:route\");\r\n  const { pathname } = useLocation();\r\n  const pathnames = pathname.split(\"/\").filter((x) => x);\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Paper\r\n        sx={{\r\n          marginTop: (theme) => theme.spacing(1),\r\n          padding: (theme) => theme.spacing(1),\r\n          backgroundColor: (theme) => theme.palette.grey[700],\r\n        }}\r\n      >\r\n        <Paper\r\n          sx={{\r\n            marginTop: (theme) => theme.spacing(1),\r\n            padding: (theme) => theme.spacing(1),\r\n            marginBottom: (theme) => theme.spacing(1),\r\n            backgroundColor: (theme) => theme.palette.background.umslRed,\r\n          }}\r\n        >\r\n          <Typography variant=\"h1\">MS Advisor</Typography>\r\n        </Paper>\r\n        <Breadcrumbs>\r\n          <LinkRouter\r\n            underline=\"hover\"\r\n            to=\"/\"\r\n            sx={{ color: (theme) => theme.text.secondary }}\r\n          >\r\n            Questions\r\n          </LinkRouter>\r\n          {pathnames.map((value, index) => {\r\n            const last = index === pathnames.length - 1;\r\n            const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n            return last ? (\r\n              <Typography\r\n                color=\"text.primary\"\r\n                key={to}\r\n                sx={{ color: (theme) => theme.text.secondary }}\r\n              >\r\n                {formatTitle(value)}\r\n              </Typography>\r\n            ) : (\r\n              <LinkRouter underline=\"hover\" color=\"inherit\" to={to} key={to}>\r\n                {formatTitle(value)}\r\n              </LinkRouter>\r\n            );\r\n          })}\r\n        </Breadcrumbs>\r\n\r\n        <Paper\r\n          sx={{\r\n            marginTop: (theme) => theme.spacing(1),\r\n            padding: (theme) => theme.spacing(1),\r\n            marginBottom: (theme) => theme.spacing(1),\r\n          }}\r\n        >\r\n          <AdvisorRouter />\r\n        </Paper>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport \"typeface-roboto\";\r\n\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n    background: {\r\n      umslRed: \"#981e32\",\r\n    },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"4rem\",\r\n      color: \"white\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2.5rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.78rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n  text: {\r\n    primary: \"white\",\r\n    secondary: \"white\",\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <CssBaseline />\r\n        <App />\r\n      </Router>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}