{"version":3,"sources":["components/Planner/Task.js","components/Planner/ClassHolder.js","components/Planner/Semester.js","data/rotation_cleaned.csv","helper/csvParser.js","data/initial-data.js","helper/rotationHelper.js","components/Planner/DisplayList.js","components/Planner/Checklist.js","components/AlertSnackbar.js","components/CreditDialog.js","components/Planner/InstructionModal.js","components/Planner/Planner.js","components/Questions/Tabs/Instructions.js","components/Questions/Tabs/RestrictedCourses.js","components/Questions/Tabs/DegreePath.js","components/Questions/Tabs/CompletedCourses.js","components/Questions/Tabs/WaivedCourses.js","components/Questions/Tabs/TransferCredits.js","components/Questions/QuestionTabs.js","components/AdvisorRouter.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Task","task","index","draggableId","id","provided","snapshot","ListItem","draggableProps","dragHandleProps","ref","innerRef","sx","margin","spacing","boxShadow","borderRadius","display","isDragging","placement","title","courses","filter","c","String","courseNum","description","ListItemText","primary","content","ClassHolder","column","tasks","isDropDisabled","isActive","Paper","width","padding","overflowY","paddingTop","Typography","variant","position","top","zIndex","flexDirection","background","droppableId","List","droppableProps","flexGrow","minHeight","map","placeholder","ColumnType","fixed","height","borderColor","parseCSVFile","file","Promise","resolve","reject","Papa","parse","download","header","complete","results","data","error","err","initialData","columns","taskIds","columnOrder","csvClassNumbers","a","forEach","course","courseName","push","rotation","rotationCourses","Number","alert","cClass","filteredData","restrictedCourses","restricted","restrictedCourseNums","fc","Object","entries","reduce","acc","k","v","includes","_union","getRequiredCourses","programId","csvData","compare","startsWith","getPreqStructure","courseId","prerequisites","isPrereqsSatisfiedComplete","tabInfo","plannedCourses","preReqinternalComplete","isCourseComplete","completed","waived","prereqs","first","slicedPreqs","slice","response","s","Array","getDataColumns","getSemesters","isOffered","classId","semesterId","found","Semesters","split","year","n","Math","abs","isOdd","e","console","DisplayList","getCourseCount","takenOrPlanned","_intersection","displayArray","length","subheader","isCertificate","reqCourses","dense","py","eleCourses","ListSubheader","total","sort","isTakenOrPlanned","px","style","fill","Checklist","courseCredits","getTotalCreditHours","transfer","get5000TotalCreditHours","coreCourses","degreePath","takenOrPlannedCourses","courses6000","alignItems","flexWrap","certificates","certTitle","certificateData","value","label","getElectiveCourses","tpEleCourses","Alert","React","elevation","AlertSnackbar","showSnack","setShowSnack","msg","handleClose","event","reason","Stack","Snackbar","open","onClose","severity","whiteSpace","CreditDialog","setOpen","setCourseCredits","useState","creditValue","setcreditValue","credit","credits","creditSplit","lowCredit","highCredit","Dialog","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","marginBottom","TextField","type","defaultValue","InputLabelProps","shrink","onChange","target","DialogActions","Button","onClick","tempValue","tempCredits","left","transform","bgcolor","p","InstructionModal","Modal","Box","component","mt","Planner","setData","setYear","instructionModal","setInstructionModal","availableCols","setAvailableCols","snackMsg","setSnackMsg","setPlannedCourses","creditOpen","setCreditOpen","useEffect","assign","columnsArray","values","tempArray","concat","newData","keys","reverse","t","fullYear","Date","getFullYear","addYear","handleOpenInstructions","useCallback","y","localYear","addSemester","key","semester","semKey","semStruct","removeSemester","pop","availableClasses","availableTasks","useMemo","taskId","onDragEnd","destination","source","getPrereqIds","prereqTypes","types","getPrereqTypes","item","i","arr","start","finish","startTaskIds","from","splice","newStart","finishTaskIds","newFinish","newTaskIds","newColumn","onDragStart","cols","Container","maxHeight","marginRight","palette","grey","justifyContent","IconButton","time","columnId","paddingLeft","marginLeft","Instructions","marginTop","Link","href","lineHeight","RestrictedCourses","setTabInfo","handleChange","checked","newArray","newTabInfo","filteredArray","options","subject","FormControlLabel","control","Checkbox","my","FormGroup","DegreePath","handleChangeCert","handleChangeDeg","FormLabel","RadioGroup","name","Radio","FormControl","required","CompletedCourses","newCompCourses","WaivedCourses","b","get6000Prereqs","core","TransferCredits","substring","TabPanel","children","other","role","hidden","a11yProps","QuestionTabs","setValue","borderBottom","Tabs","newValue","scrollButtons","Tab","AdvisorRouter","setCsvData","getAvailableClasses","then","csvClasses","path","RouterLink","to","formatTitle","charAt","toUpperCase","LinkRouter","App","pathnames","useLocation","pathname","x","umslRed","Breadcrumbs","underline","text","secondary","last","join","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","mode","h1","h2","h3","h4","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","log"],"mappings":"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","file":"static/js/main.6ca01367.chunk.js","sourcesContent":["import ListItem from \"@mui/material/ListItem\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport courses from \"../../data/ClassInfo.json\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst CustomTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 240,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}));\r\n\r\nexport default function Task({ task, index }) {\r\n  return (\r\n    <Draggable draggableId={task?.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <ListItem\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n          sx={{\r\n            margin: (theme) => theme.spacing(1),\r\n            boxShadow: 1,\r\n            borderRadius: 1,\r\n            maxWidth: 240,\r\n            display: \"flex\",\r\n            backgroundColor: snapshot.isDragging ? \"lightgreen\" : \"white\",\r\n          }}\r\n        >\r\n          <CustomTooltip\r\n            placement=\"top-start\"\r\n            title={\r\n              courses.filter((c) => String(c.courseNum) === String(task?.id))[0]\r\n                .description\r\n            }\r\n            // title=\"foo\"\r\n          >\r\n            <ListItemText primary={task?.content} />\r\n          </CustomTooltip>\r\n        </ListItem>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Task from \"./Task\";\r\n\r\nexport default function ClassHolder({\r\n  column,\r\n  tasks,\r\n  isDropDisabled,\r\n  isActive,\r\n}) {\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        margin: (theme) => theme.spacing(1),\r\n        width: 300,\r\n        padding: 1,\r\n        overflowY: \"scroll\",\r\n        paddingTop: 0,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"white\",\r\n          padding: 1,\r\n        }}\r\n      >\r\n        {column.title}\r\n      </Typography>\r\n      <Droppable droppableId={column.id} isDropDisabled={isDropDisabled}>\r\n        {(provided, snapshot) => (\r\n          <List\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            sx={{\r\n              flexGrow: 1,\r\n              minHeight: 100,\r\n            }}\r\n          >\r\n            {tasks.map((task, index) => (\r\n              <Task key={task.id} task={task} index={index} />\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport List from \"@mui/material/List\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Task from \"./Task\";\r\n\r\n\r\n\r\nexport default function ColumnType({\r\n  column,\r\n  tasks,\r\n  isDropDisabled,\r\n  isActive,\r\n}) {\r\n  return (\r\n    <Paper\r\n      fixed\r\n      sx={{\r\n        margin: (theme) => theme.spacing(1),\r\n        width: 300,\r\n        padding: 1,\r\n        display: \"flex\",\r\n        height: 240,\r\n        flexDirection: \"column\",\r\n        overflowY: \"scroll\",\r\n        border: isActive ? 3 : 0,\r\n        borderColor: \"green\",\r\n        paddingTop: 0,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h4\"\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 2,\r\n          background: \"white\",\r\n          padding: 1,\r\n        }}\r\n      >\r\n        {column.title}\r\n      </Typography>\r\n      <Droppable droppableId={column.id} isDropDisabled={isDropDisabled}>\r\n        {(provided, snapshot) => (\r\n          <List\r\n            ref={provided.innerRef}\r\n            {...provided.droppableProps}\r\n            sx={{\r\n              borderRadius: 1,\r\n              flexGrow: 1,\r\n              minHeight: 100,\r\n            }}\r\n          >\r\n            {tasks.map((task, index) => (\r\n\r\n                <Task key={task.id} task={task} index={index} />\r\n\r\n            ))}\r\n            {provided.placeholder}\r\n          </List>\r\n        )}\r\n      </Droppable>\r\n    </Paper>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/rotation_cleaned.950ebfa3.csv\";","import Papa from \"papaparse\";\r\n\r\nexport default function parseCSVFile(file) {\r\n  return new Promise((resolve, reject) => {\r\n    Papa.parse(file, {\r\n      download: true,\r\n      header: true,\r\n      complete(results) {\r\n        resolve(results.data);\r\n      },\r\n      error(err) {\r\n        reject(err);\r\n      },\r\n    });\r\n  });\r\n}\r\n","const initialData = {\r\n  classes: {},\r\n  columns: {\r\n    \"available-classes\": {\r\n      id: \"available-classes\",\r\n      title: \"Available Classes\",\r\n      taskIds: [],\r\n    },\r\n  },\r\n  columnOrder: [\r\n  ],\r\n};\r\n\r\nexport default initialData;\r\n","import courses from \"../data/ClassInfo.json\";\r\nimport rotation from \"../data/rotation_cleaned.csv\";\r\nimport parseCSVFile from \"./csvParser.js\";\r\nimport initialData from \"../data/initial-data\";\r\nimport _union from \"lodash/union\";\r\n\r\nexport async function csvClassNumbers() {\r\n  courses.forEach((course) => {\r\n    const id = String(course.courseNum);\r\n    initialData.classes[id] = {\r\n      id,\r\n      content: `CS ${id} - ${course.courseName}`,\r\n    };\r\n    initialData.columns[\"available-classes\"].taskIds.push(id);\r\n  });\r\n\r\n  try {\r\n    var data = await parseCSVFile(rotation);\r\n    const rotationCourses = data.map((a) => {\r\n      return a.Number;\r\n    });\r\n    return rotationCourses;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport async function csvClasses() {\r\n  courses.forEach((course) => {\r\n    const id = String(course.courseNum);\r\n    initialData.classes[id] = {\r\n      id,\r\n      content: `CS ${id} - ${course.courseName}`,\r\n    };\r\n    initialData.columns[\"available-classes\"].taskIds.push(id);\r\n  });\r\n\r\n  try {\r\n    var data = await parseCSVFile(rotation);\r\n    return data;\r\n  } catch (err) {\r\n    alert(err);\r\n  }\r\n}\r\n\r\nexport async function getAvailableClasses() {\r\n  const cClass = await csvClassNumbers();\r\n  const filteredData = { ...initialData };\r\n  const restrictedCourses = courses.filter((c) => c.restricted);\r\n  const restrictedCourseNums = restrictedCourses.map((fc) =>\r\n    String(fc.courseNum)\r\n  );\r\n\r\n  filteredData.classes = Object.entries(initialData.classes).reduce(\r\n    (acc, [k, v]) => {\r\n      if (restrictedCourseNums?.includes(k) || cClass?.includes(k)) {\r\n        return { ...acc, [k]: v };\r\n      }\r\n      return acc;\r\n    },\r\n    {}\r\n  );\r\n  filteredData.columns[\"available-classes\"].taskIds = _union(\r\n    restrictedCourseNums,\r\n    cClass\r\n  );\r\n  return filteredData;\r\n}\r\n\r\nexport function isCourseRestricted(courseNum) {\r\n  return (\r\n    courses.filter(\r\n      (c) => String(c.courseNum) === String(courseNum) && c.restricted\r\n    ).length > 0\r\n  );\r\n}\r\n\r\n/*\r\n * Given a program id, returns an array of required course ids. Excluding 6000.\r\n * programIds\r\n * MSCS = MS in CS\r\n * Traditional = traditional path in CS extra requirements\r\n * MSCB = Masters in Cybersecurity\r\n * GCAI = certificate in AI\r\n * GCCB = certificate in Cybersecurity\r\n * GCDS = certificate in Data science\r\n * GCIW = Certificate Internet/Web\r\n * GCMA = Certificate Mobile Apps\r\n */\r\nexport function getRequiredCourses(programId, csvData) {\r\n  let compare = \"R\";\r\n  if (programId === \"traditional\") {\r\n    compare = \"R*\";\r\n    programId = \"MSCS\";\r\n  }\r\n  if (programId === \"professional\") {\r\n    return [\"5991\"];\r\n  }\r\n\r\n  return !csvData\r\n    ? null\r\n    : csvData\r\n        .filter((c) => c[programId] === compare)\r\n        .filter((c) => !c.Number.startsWith(\"6\"))\r\n        .map((c) => c.Number);\r\n}\r\n\r\n/*\r\n * Given a program id, returns an array of elective course ids.\r\n * programIds\r\n * MSCS = MS in CS\r\n * MSCB = Masters in Cybersecurity\r\n * GCAI = certificate in AI\r\n * GCCB = certificate in Cybersecurity\r\n * GCDS = certificate in Data science\r\n * GCIW = Certificate Internet/Web\r\n * GCMA = Certificate Mobile Apps\r\n */\r\nexport function getElectiveCourses(programId, csvData) {\r\n  return !csvData\r\n    ? null\r\n    : csvData.filter((c) => c[programId] === \"L\").map((c) => c.Number);\r\n}\r\n\r\n/* Returns an array of class numbers strings that are prerequisites to the 6000 level courses\r\n */\r\nexport function get6000Prereqs() {\r\n  const a = [];\r\n  courses\r\n    .filter((c) => String(c.courseNum).startsWith(\"6\"))\r\n    .map((c) => c.prerequisites)\r\n    .forEach((c) => c.forEach((b) => b.courseNum && a.push(\"\" + b.courseNum)));\r\n  return _union(a);\r\n}\r\n\r\n/* Given a course number, returns an array of class numbers that are pre\r\n * requisites to the given course number.\r\n */\r\nexport function getPrereqIds(courseId) {\r\n  const a = [];\r\n  getPreqStructure(courseId).forEach((c) => {\r\n    // FIXME handle arrays\r\n    c.courseNum && a.push(\"\" + c.courseNum);\r\n  });\r\n  return _union(a);\r\n}\r\n\r\n// given a course number, returns the prerequisite structure.\r\nexport function getPreqStructure(courseId) {\r\n  return courses\r\n    .filter((c) => String(c.courseNum) === String(courseId))\r\n    .map((c) => c.prerequisites)[0];\r\n}\r\n\r\n/*  Given a course number, returns an array of logic operators that determine\r\n *  how to do the logic for the prerequisites. First will always be how all of\r\n *  prereqs logic together, the following are the logic for each array of prereqs\r\n *  in the order of array. We only support a single nested logic.\r\n *  EXAMPLE\r\n *    \"OR\",\r\n      \"Grad_Standing\",\r\n      [\r\n        \"AND\",\r\n        { \"courseNum\": 1320, \"subject\": \"MATH\" },\r\n        { \"courseNum\": 2750, \"subject\": \"CMP_SCI\" }\r\n      ],\r\n      [\r\n        \"OR\",\r\n        { \"courseNum\": 1000, \"subject\": \"MATH\" },\r\n        { \"courseNum\": 4000, \"subject\": \"CMP_SCI\" }\r\n      ]\r\n *\r\n *  returns ['OR', 'AND', 'OR'] \r\n */\r\nexport function getPrereqTypes(courseId) {\r\n  const types = [];\r\n  getPreqStructure(courseId).forEach((c) => {\r\n    if (typeof c === \"string\" && c !== \"Grad_Standing\") {\r\n      types.push(c);\r\n    }\r\n    if (\r\n      c instanceof Array &&\r\n      typeof c[0] === \"string\" &&\r\n      !c[0] === \"Grad_Standing\"\r\n    )\r\n      types.push(c);\r\n  });\r\n\r\n  return types;\r\n}\r\n\r\n/* Determines if course has its prerequisites satisfied by the given data.\r\n * This does not take into account information from the tabinfo\r\n */\r\nexport function isPrereqsSatisfied(courseId, data, plannedCourses) {\r\n  const preStruct = getPreqStructure(courseId);\r\n  // const semesters = getSemesters(data);\r\n  return preReqinternal(preStruct, plannedCourses);\r\n}\r\n\r\nfunction preReqinternal(prereqs, plannedCourses) {\r\n  const first = prereqs[0];\r\n  if (typeof first !== \"string\")\r\n    return plannedCourses.includes(prereqs[0].courseNum);\r\n\r\n  const slicedPreqs = prereqs.slice(1);\r\n  if (first === \"OR\") {\r\n    let response = false;\r\n    slicedPreqs.forEach((s) => {\r\n      if (response) return;\r\n      if (s === \"Grad_Standing\") {\r\n        response = true;\r\n      } else if (s instanceof Array) {\r\n        response = preReqinternal(s, plannedCourses);\r\n      } else if (plannedCourses.includes(s.courseNum)) response = true;\r\n    });\r\n    return response;\r\n  }\r\n\r\n  if (first === \"AND\") {\r\n    let response = true;\r\n    slicedPreqs.forEach((s) => {\r\n      if (!response) return;\r\n      if (s === \"Grad_Standing\") {\r\n        response = true;\r\n      } else if (s instanceof Array) {\r\n        response = preReqinternal(s, plannedCourses);\r\n      } else if (!plannedCourses.includes(s.courseNum)) response = false;\r\n    });\r\n    return response;\r\n  }\r\n}\r\n\r\n/* Determines if course has its prerequisites satisfied by the given data,\r\n * and tabinfo\r\n */\r\nexport function isPrereqsSatisfiedComplete(\r\n  courseId,\r\n  data,\r\n  tabInfo,\r\n  plannedCourses\r\n) {\r\n  const preStruct = getPreqStructure(courseId);\r\n  // const semesters = getSemesters(data);\r\n  return preReqinternalComplete(preStruct, plannedCourses, tabInfo);\r\n}\r\n\r\n// returns true if the course has been completed already.\r\nexport function isCourseComplete(courseId, tabInfo) {\r\n  return (\r\n    tabInfo.completed.includes(\"\" + courseId) ||\r\n    tabInfo.waived.includes(\"\" + courseId)\r\n  );\r\n}\r\n\r\nfunction preReqinternalComplete(prereqs, plannedCourses, tabInfo) {\r\n  const first = prereqs[0];\r\n  if (typeof first !== \"string\")\r\n    return (\r\n      plannedCourses.includes(\"\" + prereqs[0].courseNum) ||\r\n      isCourseComplete(prereqs[0].courseNum, tabInfo)\r\n    );\r\n\r\n  const slicedPreqs = prereqs.slice(1);\r\n  if (first === \"OR\") {\r\n    let response = false;\r\n    slicedPreqs.forEach((s) => {\r\n      if (response) return;\r\n      if (s === \"Grad_Standing\") {\r\n        response = true;\r\n      } else if (s instanceof Array) {\r\n        response = preReqinternalComplete(s, plannedCourses, tabInfo);\r\n      } else if (\r\n        // isCourseSelectedSemesters(s.courseNum, plannedCourses) ||\r\n        plannedCourses.includes(\"\" + s.courseNum) ||\r\n        isCourseComplete(s.courseNum, tabInfo)\r\n      )\r\n        response = true;\r\n    });\r\n    return response;\r\n  }\r\n\r\n  if (first === \"AND\") {\r\n    let response = true;\r\n    slicedPreqs.forEach((s) => {\r\n      if (!response) return;\r\n      if (s === \"Grad_Standing\") {\r\n        response = true;\r\n      } else if (s instanceof Array) {\r\n        response = preReqinternalComplete(s, plannedCourses, tabInfo);\r\n      } else if (\r\n        // !isCourseSelectedSemesters(s.courseNum, plannedCourses) ||\r\n        !plannedCourses.includes(\"\" + s.courseNum) ||\r\n        isCourseComplete(s.courseNum, tabInfo)\r\n      )\r\n        response = false;\r\n    });\r\n    return response;\r\n  }\r\n}\r\n\r\n// Determines if the given course is selected in the dataset.\r\nexport function isCourseSelected(courseId, data) {\r\n  let response = false;\r\n  getSemesters(data).forEach((s) => {\r\n    if (s.taskIds.includes(String(courseId))) response = true;\r\n  });\r\n  return response;\r\n}\r\n\r\n// Determines if the given course is selected in the semesters.\r\nexport function isCourseSelectedSemesters(courseId, semesters) {\r\n  let response = false;\r\n  semesters.forEach((s) => {\r\n    if (s.taskIds.includes(String(courseId))) response = true;\r\n  });\r\n  return response;\r\n}\r\n\r\n// retrieves all columns for the dataset\r\nexport function getDataColumns(data) {\r\n  return Object.entries(data.columns).map((c) => c[1]);\r\n}\r\n\r\n// retrieves all semesters for the dataset\r\nexport function getSemesters(data) {\r\n  return getDataColumns(data).filter((c) => c.id !== \"available-classes\");\r\n}\r\n\r\n/*\r\n * semester comes in as semester-year\r\n * FS = fall\r\n * SS = summer\r\n * SP = spring\r\n * Example: FS-2022\r\n */\r\nexport function isOffered(classId, semesterId, classes) {\r\n  try {\r\n    let response = false;\r\n    let found = false;\r\n    classes.forEach((c) => {\r\n      if (c.Number === classId) {\r\n        found = true;\r\n        const offeredSemesters = c.Semesters.split(\" \");\r\n        offeredSemesters.forEach((s) => {\r\n          if (semesterId.startsWith(s)) {\r\n            if (c[\"even or odd\"]) {\r\n              const year = semesterId.split(\"-\")[1];\r\n              if (isEven(year) && c[\"even or odd\"] === \"even\") {\r\n                response = true;\r\n              }\r\n              if (isOdd(year) && c[\"even or odd\"] === \"odd\") {\r\n                response = true;\r\n              }\r\n            } else {\r\n              response = true;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (!found) {\r\n      return true;\r\n    }\r\n    return response;\r\n  } catch (e) {\r\n    console.error(`error in rotationHelper.js/isOffered`, e);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction isEven(n) {\r\n  return n % 2 === 0;\r\n}\r\nfunction isOdd(n) {\r\n  return Math.abs(n % 2) === 1;\r\n}\r\n","import {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport _union from \"lodash/union\";\r\nimport _intersection from \"lodash/intersection\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport WarningIcon from \"@mui/icons-material/Warning\";\r\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst CustomTooltip = styled(({ className, ...props }) => (\r\n  <Tooltip {...props} classes={{ popper: className }} />\r\n))(({ theme }) => ({\r\n  [`& .${tooltipClasses.tooltip}`]: {\r\n    backgroundColor: \"#f5f5f9\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    maxWidth: 220,\r\n    fontSize: theme.typography.pxToRem(12),\r\n    border: \"1px solid #dadde9\",\r\n  },\r\n}));\r\n\r\nexport default function DisplayList(props) {\r\n  function getCourseCount() {\r\n    const takenOrPlanned = _union(\r\n      props.tabInfo.completed,\r\n      props.plannedCourses\r\n    );\r\n    const courses = _intersection(takenOrPlanned, props.displayArray);\r\n    return courses.length;\r\n  }\r\n\r\n  let subheader;\r\n  if (props.isCertificate) {\r\n    subheader = (\r\n      <CustomTooltip\r\n        placement=\"top-start\"\r\n        title={\r\n          <div>\r\n            <Typography> Required: </Typography>\r\n            {props.reqCourses.map((a) => {\r\n              return (\r\n                <List dense>\r\n                  <ListItem sx={{ py: 0 }}>\r\n                    <ListItemText sx={{ py: 0 }} primary={`Comp Sci ${a}`} />\r\n                  </ListItem>\r\n                </List>\r\n              );\r\n            })}\r\n            <Typography> Electives: </Typography>\r\n            {props.eleCourses.map((a) => {\r\n              return (\r\n                <List dense>\r\n                  <ListItem sx={{ py: 0 }}>\r\n                    <ListItemText sx={{ py: 0 }} primary={`Comp Sci ${a}`} />\r\n                  </ListItem>\r\n                </List>\r\n              );\r\n            })}\r\n          </div>\r\n        }\r\n      >\r\n        <ListSubheader\r\n          sx={{\r\n            color: getCourseCount() < props.total ? \"red\" : \"grey\",\r\n          }}\r\n        >\r\n          {\" \"}\r\n          {props.subheader}: {getCourseCount()} / {props.total}{\" \"}\r\n        </ListSubheader>\r\n      </CustomTooltip>\r\n    );\r\n  } else {\r\n    subheader = (\r\n      <ListSubheader\r\n        sx={{\r\n          color: getCourseCount() < props.total ? \"red\" : \"grey\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        {props.subheader}: {getCourseCount()} / {props.total}{\" \"}\r\n      </ListSubheader>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <List sx={{ py: 0 }}>\r\n      {subheader}\r\n      {props.displayArray.sort().map((a) => {\r\n        let isTakenOrPlanned =\r\n          props.tabInfo.completed.includes(a) ||\r\n          props.plannedCourses.includes(a) ||\r\n          props.tabInfo.waived.includes(a);\r\n        let color = isTakenOrPlanned ? \"green\" : \"red\";\r\n        let primary = `Comp Sci ${a}`;\r\n        return (\r\n          <ListItem sx={{ py: 0 }}>\r\n            <ListItemText\r\n              sx={{ py: 0, px: 2, color: color }}\r\n              primary={primary}\r\n            />\r\n            {isTakenOrPlanned ? (\r\n              <CheckIcon style={{ fill: \"green\" }} />\r\n            ) : (\r\n              <WarningIcon style={{ fill: \"red\" }} />\r\n            )}\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n","import { Typography } from \"@mui/material\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport {\r\n  getElectiveCourses,\r\n  getRequiredCourses,\r\n} from \"../../helper/rotationHelper\";\r\nimport DisplayList from \"./DisplayList\";\r\nimport _union from \"lodash/union\";\r\nimport _intersection from \"lodash/intersection\";\r\nimport certificateData from \"../../data/Certificates.json\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\nimport WarningIcon from \"@mui/icons-material/Warning\";\r\n\r\nconst TOTAL_CREDIT_HOURS = 30;\r\nconst TOTAL_5000_CREDIT_HOURS = 18;\r\n\r\nexport default function Checklist({\r\n  tabInfo,\r\n  plannedCourses,\r\n  csvData,\r\n  courseCredits,\r\n}) {\r\n  function getTotalCreditHours() {\r\n    let total = 0;\r\n    Object.entries(courseCredits).forEach((c) => (total += c[1]));\r\n    return total + tabInfo.transfer;\r\n  }\r\n\r\n  function get5000TotalCreditHours() {\r\n    let total = 0;\r\n    Object.entries(courseCredits)\r\n      .filter((c) => c[0].startsWith(\"5\"))\r\n      .forEach((c) => (total += c[1]));\r\n    return total + tabInfo.transfer;\r\n  }\r\n\r\n  let allCore = [\"4250\", \"5130\", \"5500\"];\r\n  let coreCourses = _union(\r\n    allCore,\r\n    getRequiredCourses(tabInfo.degreePath, csvData)\r\n  );\r\n  let takenOrPlannedCourses = _union(tabInfo.completed, plannedCourses);\r\n  let courses6000 = takenOrPlannedCourses.filter((c) => c.startsWith(\"6\"));\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        margin: (theme) => theme.spacing(1),\r\n        width: 300,\r\n        padding: 1,\r\n        overflowY: \"scroll\",\r\n        paddingTop: 0,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        sx={{\r\n          position: \"sticky\",\r\n          top: 0,\r\n          zIndex: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          background: \"white\",\r\n          padding: 1,\r\n        }}\r\n      >\r\n        Degree Checklist\r\n      </Typography>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Typography sx={{ padding: 1 }}>\r\n          Total credit hours: {getTotalCreditHours()} / {TOTAL_CREDIT_HOURS}\r\n        </Typography>\r\n        {getTotalCreditHours() >= TOTAL_CREDIT_HOURS ? (\r\n          <CheckIcon style={{ fill: \"green\" }} />\r\n        ) : (\r\n          <WarningIcon style={{ fill: \"red\" }} />\r\n        )}\r\n      </div>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Typography sx={{ padding: 1 }}>\r\n          5000 level credit hours {get5000TotalCreditHours()} /{\" \"}\r\n          {TOTAL_5000_CREDIT_HOURS}\r\n        </Typography>\r\n        {get5000TotalCreditHours() >= TOTAL_5000_CREDIT_HOURS ? (\r\n          <CheckIcon style={{ fill: \"green\" }} />\r\n        ) : (\r\n          <WarningIcon style={{ fill: \"red\" }} />\r\n        )}\r\n      </div>\r\n      <hr />\r\n\r\n      <DisplayList\r\n        tabInfo={tabInfo}\r\n        plannedCourses={plannedCourses}\r\n        subheader={\"6000 Level Course\"}\r\n        displayArray={courses6000}\r\n        total={1}\r\n      />\r\n\r\n      {tabInfo.restricted.length > 0 && (\r\n        <DisplayList\r\n          tabInfo={tabInfo}\r\n          plannedCourses={plannedCourses}\r\n          subheader={\"Restricted Courses\"}\r\n          displayArray={tabInfo.restricted}\r\n          total={tabInfo.restricted.length}\r\n        />\r\n      )}\r\n      <DisplayList\r\n        tabInfo={tabInfo}\r\n        plannedCourses={plannedCourses}\r\n        subheader={\"Core\"}\r\n        displayArray={coreCourses}\r\n        total={\r\n          tabInfo.degreePath === \"traditional\"\r\n            ? 5\r\n            : tabInfo.degreePath === \"professional\"\r\n            ? 4\r\n            : 3\r\n        }\r\n      />\r\n      {tabInfo.certificates.map((c) => {\r\n        let certTitle = certificateData\r\n          .filter((a) => a.value === c)\r\n          .map((a) => a.label)[0];\r\n        let reqCourses = getRequiredCourses(c, csvData);\r\n        let eleCourses = getElectiveCourses(c, csvData);\r\n        let tpEleCourses = _intersection(eleCourses, takenOrPlannedCourses);\r\n        let courses = _union(reqCourses, tpEleCourses);\r\n        return (\r\n          <DisplayList\r\n            tabInfo={tabInfo}\r\n            plannedCourses={plannedCourses}\r\n            subheader={`${certTitle}`}\r\n            displayArray={courses}\r\n            total={4}\r\n            isCertificate={true}\r\n            reqCourses={reqCourses}\r\n            eleCourses={eleCourses}\r\n          />\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function AlertSnackbar({ showSnack, setShowSnack, msg }) {\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setShowSnack(false);\r\n  };\r\n\r\n  return (\r\n    <Stack spacing={2} sx={{ width: \"100%\" }}>\r\n      <Snackbar open={showSnack} onClose={handleClose}>\r\n        <Alert\r\n          onClose={handleClose}\r\n          severity=\"warning\"\r\n          sx={{ width: \"100%\", whiteSpace: \"pre-line\" }}\r\n        >\r\n          {msg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Stack>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport courses from \"../data/ClassInfo.json\";\r\n\r\nexport default function CreditDialog({\r\n  open,\r\n  setOpen,\r\n  courseCredits,\r\n  setCourseCredits,\r\n}) {\r\n  const [creditValue, setcreditValue] = useState(0);\r\n\r\n  const credit = courses.filter((c) => String(c.courseNum) === String(open))[0]\r\n    ?.credits;\r\n\r\n  const creditSplit = credit?.split(\"-\");\r\n  const lowCredit = creditSplit ? Number(creditSplit[0]) : 0;\r\n  const highCredit = creditSplit ? Number(creditSplit[1]) : 3;\r\n\r\n  const handleCreditUpdate = () => {\r\n    let tempValue = creditValue;\r\n    if (tempValue === \"\" || tempValue === 0) tempValue = lowCredit;\r\n    let tempCredits = {\r\n      ...courseCredits,\r\n      [open]: tempValue,\r\n    };\r\n    setCourseCredits(tempCredits);\r\n    setOpen(false);\r\n  };\r\n  const handleChange = (e) => {\r\n    if (e.target.value !== \"\" && Number(e.target.value) < lowCredit)\r\n      e.target.value = lowCredit;\r\n    if (Number(e.target.value) > highCredit) e.target.value = highCredit;\r\n    setcreditValue(Number(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} disableBackdropClick=\"true\">\r\n        <DialogTitle>Select Number of Credits</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n            sx={{\r\n              marginBottom: 1.5,\r\n            }}\r\n          >\r\n            Select between {credit} credit hours you expect to or have already\r\n            received for this course.\r\n          </DialogContentText>\r\n          <TextField\r\n            id=\"credits\"\r\n            label=\"# of Credits\"\r\n            type=\"number\"\r\n            defaultValue={lowCredit}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={handleChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCreditUpdate}>Confirm</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\n\r\nconst style = {\r\n  position: \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 800,\r\n  bgcolor: \"background.paper\",\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nexport default function InstructionModal({ open, setOpen }) {\r\n  const handleClose = () => setOpen(false);\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n            Instructions\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            This page is grouped into three sections.\r\n            <br />\r\n            <br />\r\n            On the left you see Available Classes. Here you will see all the\r\n            available classes you can take for a given semester. Hovering over\r\n            these classes will give a brief description about them. When you\r\n            left click you are able to drag the classes to the semesters that\r\n            are highlighted green. It is suggested that you start with a 6000\r\n            level course.\r\n            <br />\r\n            <br />\r\n            In the middle you see numerous semesters that you can add courses\r\n            to. You can add or remove a year to the end of the list of semesters\r\n            by pressing the plus or minus buttons at the top.\r\n            <br />\r\n            <br />\r\n            On the right side you see a degree checklist. This shows what is\r\n            needed for the path you choice in the questions page previously. To\r\n            see which elective are associated to each certificate, hover over\r\n            the subheader of the certificate and you should see a tooltip. Once\r\n            there is no red and everything is checked you are done planning.\r\n            <br />\r\n            <br />\r\n            To see this message again press the instructions at the top left of\r\n            the page.\r\n            <br />\r\n            <br />\r\n            To return to the questions page click the questions label in the\r\n            bread crumbs at the top left of the page.\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useMemo, useEffect, useCallback } from \"react\";\r\nimport { Container } from \"@mui/material\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport ClassHolder from \"./ClassHolder\";\r\nimport Semester from \"./Semester\";\r\nimport { Paper } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Checklist from \"./Checklist\";\r\nimport {\r\n  isOffered,\r\n  getPrereqTypes,\r\n  getPrereqIds,\r\n  isPrereqsSatisfiedComplete,\r\n  getSemesters,\r\n  getDataColumns,\r\n  isCourseComplete,\r\n} from \"../../helper/rotationHelper.js\";\r\nimport AlertSnackbar from \"../AlertSnackbar\";\r\nimport courses from \"../../data/ClassInfo.json\";\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport RemoveCircleRoundedIcon from \"@mui/icons-material/RemoveCircleRounded\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CreditDialog from \"../CreditDialog\";\r\nimport Button from \"@mui/material/Button\";\r\nimport InstructionModal from \"./InstructionModal\";\r\n\r\nexport default function Planner({\r\n  data,\r\n  setData,\r\n  tabInfo,\r\n  csvData,\r\n  year,\r\n  setYear,\r\n  courseCredits,\r\n  setCourseCredits,\r\n  instructionModal,\r\n  setInstructionModal,\r\n}) {\r\n  const [availableCols, setAvailableCols] = useState(null);\r\n  const [showSnack, setShowSnack] = useState(false);\r\n  const [snackMsg, setSnackMsg] = useState(null);\r\n  const [plannedCourses, setPlannedCourses] = useState([]);\r\n  const [creditOpen, setCreditOpen] = useState(false);\r\n\r\n  //Useful for debugging\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"tabInfoPlanner: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"dataEffect: \", data);\r\n    }\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"plannedCourses: \", plannedCourses);\r\n    }\r\n  }, [plannedCourses]);\r\n\r\n  // save planned courses when placing courses\r\n  useEffect(() => {\r\n    let columns = Object.assign({}, data.columns, {\r\n      \"available-classes\": null,\r\n    });\r\n    let columnsArray = Object.values(columns);\r\n    let tempArray = [].concat(\r\n      ...columnsArray.filter((v) => v).map((a) => a.taskIds || [])\r\n    );\r\n    setPlannedCourses(tempArray);\r\n  }, [data]);\r\n\r\n  // filter out completed / waived courses\r\n  useEffect(() => {\r\n    let newData = { ...data };\r\n    newData.columns[\"available-classes\"].taskIds = Object.keys(newData.classes)\r\n      .filter((a) => {\r\n        let response = true;\r\n        getSemesters(newData).forEach((c) => {\r\n          if (c.taskIds.includes(a)) {\r\n            response = false;\r\n            return;\r\n          }\r\n        });\r\n        return response;\r\n      })\r\n      .reverse();\r\n\r\n    getDataColumns(newData).forEach(\r\n      (c) =>\r\n        (c.taskIds = c.taskIds.filter((t) => !isCourseComplete(t, tabInfo)))\r\n    );\r\n    setData(newData);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [tabInfo]);\r\n\r\n  //set year and add three years to display\r\n  useEffect(() => {\r\n    if (!year) {\r\n      const time = new Date();\r\n      var fullYear = time.getFullYear();\r\n      addYear(fullYear);\r\n      addYear(fullYear + 1);\r\n      addYear(fullYear + 2);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleOpenInstructions = useCallback(() => {\r\n    setInstructionModal(true);\r\n  }, [setInstructionModal]);\r\n\r\n  const onDragStart = ({ draggableId }) => {\r\n    if (!csvData) {\r\n      return;\r\n    }\r\n\r\n    const cols = [];\r\n    data.columnOrder.forEach((key) => {\r\n      if (isOffered(draggableId, key, csvData)) {\r\n        cols.push(key);\r\n      }\r\n    });\r\n    cols.push(\"available-classes\");\r\n    setAvailableCols(cols);\r\n  };\r\n\r\n  const onDragEnd = ({ destination, source, draggableId }) => {\r\n    setAvailableCols(null);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.droppableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    // warn user to select a pre-req if selecting a 6000.\r\n    if (\r\n      String(draggableId).startsWith(\"6\") &&\r\n      !isPrereqsSatisfiedComplete(draggableId, data, tabInfo, plannedCourses)\r\n    ) {\r\n      let prereqs = getPrereqIds(draggableId);\r\n      const prereqTypes = getPrereqTypes(draggableId);\r\n\r\n      if (\r\n        prereqs.length !== 0 &&\r\n        destination.droppableId !== \"available-classes\"\r\n      ) {\r\n        setShowSnack(true);\r\n        let msg = `The following course(s) must be taken before CS ${draggableId}\\n`;\r\n        courses\r\n          .filter((v) => prereqs.includes(\"\" + v.courseNum))\r\n          .forEach((item, i, arr) => {\r\n            msg = msg + `CS ${item.courseNum} - ${item.courseName}\\n`;\r\n            if (i !== arr.length - 1) msg = `${msg}${prereqTypes[0]}\\n`;\r\n          });\r\n        setSnackMsg(msg.slice(0, -1));\r\n      }\r\n    } else {\r\n      setShowSnack(false);\r\n    }\r\n\r\n    // update the credits\r\n    if (destination.droppableId !== \"available-classes\") {\r\n      const credit = courses.filter(\r\n        (c) => String(c.courseNum) === String(draggableId)\r\n      )[0].credits;\r\n\r\n      if (typeof credit === \"string\") {\r\n        setCreditOpen(draggableId);\r\n      } else {\r\n        let tempCredits = {\r\n          ...courseCredits,\r\n          [draggableId]: courses.filter(\r\n            (c) => String(c.courseNum) === String(draggableId)\r\n          )[0].credits,\r\n        };\r\n        setCourseCredits(tempCredits);\r\n      }\r\n    } else {\r\n      let tempCredits = {\r\n        ...courseCredits,\r\n      };\r\n      delete tempCredits[draggableId];\r\n      setCourseCredits(tempCredits);\r\n    }\r\n\r\n    // update data with new column values\r\n    const start = data.columns[source.droppableId];\r\n    const finish = data.columns[destination.droppableId];\r\n\r\n    if (start === finish) {\r\n      const newTaskIds = Array.from(start.taskIds);\r\n      newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        taskIds: newTaskIds.sort().reverse(),\r\n      };\r\n\r\n      const newData = {\r\n        ...data,\r\n        columns: {\r\n          ...data.columns,\r\n          [newColumn.id]: newColumn,\r\n        },\r\n      };\r\n      setData(newData);\r\n      return;\r\n    }\r\n\r\n    const startTaskIds = Array.from(start.taskIds);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      taskIds: startTaskIds,\r\n    };\r\n\r\n    const finishTaskIds = Array.from(finish.taskIds);\r\n    finishTaskIds.splice(destination.index, 0, draggableId);\r\n    const newFinish = {\r\n      ...finish,\r\n      taskIds: finishTaskIds.sort().reverse(),\r\n    };\r\n\r\n    const newData = {\r\n      ...data,\r\n      columns: {\r\n        ...data.columns,\r\n        [newStart.id]: newStart,\r\n        [newFinish.id]: newFinish,\r\n      },\r\n    };\r\n\r\n    setData(newData);\r\n  };\r\n\r\n  //Code to add and remove year\r\n  function addYear(y) {\r\n    var newData = { ...data };\r\n    var localYear = typeof y === \"number\" ? y : year + 1;\r\n    addSemester(localYear, \"SP\", \"Spring\", newData);\r\n    addSemester(localYear, \"SS\", \"Summer\", newData);\r\n    addSemester(localYear, \"FS\", \"Fall\", newData);\r\n    setData(newData);\r\n    setYear(localYear);\r\n  }\r\n\r\n  function addSemester(y, key, semester, newData) {\r\n    const semKey = key + \"-\" + y;\r\n    const spTitle = semester + \" \" + y;\r\n    const semStruct = {\r\n      key: semKey,\r\n      id: semKey,\r\n      title: spTitle,\r\n      taskIds: [],\r\n    };\r\n\r\n    newData.columns[semKey] = semStruct;\r\n    newData.columnOrder.push(semKey);\r\n  }\r\n\r\n  function removeYear() {\r\n    const time = new Date();\r\n    if (year > time.getFullYear()) {\r\n      let newData = { ...data };\r\n      removeSemester(\"SP-\" + year, newData);\r\n      removeSemester(\"SS-\" + year, newData);\r\n      removeSemester(\"FS-\" + year, newData);\r\n      setData(newData);\r\n      setYear(year - 1);\r\n    }\r\n  }\r\n\r\n  function removeSemester(semester, newData) {\r\n    Object.keys(newData.columns).forEach((key) => {\r\n      if (key === semester) {\r\n        newData.columns[semester].taskIds.forEach((t) => {\r\n          newData.columns[\"available-classes\"].taskIds.push(t);\r\n        });\r\n        newData.columns[\"available-classes\"].taskIds.sort().reverse();\r\n        delete newData.columns[key];\r\n      }\r\n    });\r\n    newData.columnOrder.pop();\r\n  }\r\n\r\n  const availableClasses = data.columns[\"available-classes\"];\r\n  const availableTasks = useMemo(\r\n    () => availableClasses.taskIds.map((taskId) => data.classes[taskId]),\r\n    [availableClasses.taskIds, data.classes]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <AlertSnackbar\r\n        showSnack={showSnack}\r\n        setShowSnack={setShowSnack}\r\n        msg={snackMsg}\r\n      />\r\n      <CreditDialog\r\n        open={creditOpen}\r\n        setOpen={setCreditOpen}\r\n        courseCredits={courseCredits}\r\n        setCourseCredits={setCourseCredits}\r\n      />\r\n      <InstructionModal open={instructionModal} setOpen={setInstructionModal} />\r\n      <Button onClick={handleOpenInstructions}>Instructions</Button>\r\n      <DragDropContext\r\n        onDragEnd={onDragEnd}\r\n        onDragStart={onDragStart}\r\n        sx={{ display: \"flex\" }}\r\n      >\r\n        <Container maxWidth={false} sx={{ display: \"flex\" }}>\r\n          <Paper\r\n            sx={{\r\n              display: \"flex\",\r\n              maxHeight: 750,\r\n              marginRight: 5,\r\n              position: \"sticky\",\r\n              top: 0,\r\n              backgroundColor: (theme) => theme.palette.grey[400],\r\n            }}\r\n          >\r\n            <ClassHolder\r\n              key={availableClasses.id}\r\n              column={availableClasses}\r\n              tasks={availableTasks}\r\n            />\r\n          </Paper>\r\n\r\n          <div>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                position: \"sticky\",\r\n                top: 0,\r\n                backgroundColor: (theme) => \"white\",\r\n                zIndex: 10,\r\n                borderRadius: 2,\r\n              }}\r\n            >\r\n              <IconButton onClick={removeYear}>\r\n                <RemoveCircleRoundedIcon />\r\n              </IconButton>\r\n              <IconButton onClick={addYear}>\r\n                <AddCircleIcon />\r\n              </IconButton>\r\n            </Box>\r\n            <Paper\r\n              sx={{\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                backgroundColor: (theme) => theme.palette.grey[400],\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              {data.columnOrder.map((columnId, index) => {\r\n                const column = data.columns[columnId];\r\n                const tasks = column.taskIds.map(\r\n                  (taskId) => data.classes[taskId]\r\n                );\r\n\r\n                const isDropDisabled = !availableCols?.includes(column.id);\r\n\r\n                return (\r\n                  <Box\r\n                    sx={{\r\n                      display: \"flex\",\r\n                      paddingLeft: 0,\r\n                    }}\r\n                    key={column.id}\r\n                    column={column}\r\n                    tasks={tasks}\r\n                    isDropDisabled={isDropDisabled}\r\n                    isActive={availableCols?.includes(column.id)}\r\n                  >\r\n                    <Semester\r\n                      key={column.id}\r\n                      column={column}\r\n                      tasks={tasks}\r\n                      isDropDisabled={isDropDisabled}\r\n                      isActive={availableCols?.includes(column.id)}\r\n                    />\r\n                  </Box>\r\n                );\r\n              })}\r\n            </Paper>\r\n          </div>\r\n\r\n          <Paper\r\n            sx={{\r\n              display: \"flex\",\r\n              maxHeight: 750,\r\n              marginLeft: 10,\r\n              position: \"sticky\",\r\n              top: 0,\r\n              backgroundColor: (theme) => theme.palette.grey[400],\r\n            }}\r\n          >\r\n            <Checklist\r\n              tabInfo={tabInfo}\r\n              plannedCourses={plannedCourses}\r\n              csvData={csvData}\r\n              courseCredits={courseCredits}\r\n            ></Checklist>\r\n          </Paper>\r\n        </Container>\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\n\r\nexport default function Instructions() {\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Welcome to the M.S. in Computer Science Advisor</Typography>\r\n      <Typography>This tool can help MS Computer Science students plan their program so that they may meet \r\n        their <Link target = \"_blank\" href = \"http://www.umsl.edu/cmpsci/graduate-studies/ms-compsci.html\"> Course Requirements</Link>  within a desired time span. The tool can be used by new or existing students.</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 30,\r\n          lineHeight: 2,\r\n          }} > Instructions: Degree planning is done in two stages</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 24,\r\n          lineHeight: 1.5,\r\n          }}>Course Details:</Typography>\r\n      <Typography>Please use the DEGREE PATHS tab to select your desired degree from the options listed. Then use the COURSES tabs to determine which courses will be required for your selected degree.</Typography>\r\n\r\n      <Typography \r\n        sx={{\r\n          fontSize : 24,\r\n          lineHeight: 1.5,\r\n          }}>Course Planning:</Typography>\r\n      <Typography>In the course selection section, students will choose which courses they plan to take to complete their CS Masters degree. The course information that facilitates planning comes from two \r\n        primary sources: the upcoming scheduled courses available in MyView for registration, and the course rotation, which include the standard 3-year rotation and unofficial rotation. Courses not listed in either \r\n        rotation can still be planned as unspecified elective. <Link target = \"_blank\" href = \"https://bulletin.umsl.edu/artsandsciences/computerscience/#courseinventory\"> Click here for a full list of CMP SCI Courses</Link></Typography>      \r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\n\r\nexport default function RestrictedCourses({ tabInfo, setTabInfo }) {\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.restricted.slice();\r\n      newArray.push(e.target.id);\r\n      const newTabInfo = {...tabInfo, restricted: newArray};\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.restricted.slice();\r\n      let filteredArray = newArray.filter(item => item !== e.target.id);\r\n      const newTabInfo = {...tabInfo, restricted: filteredArray};\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  }\r\n\r\n  const options = courses.filter((v) => v.restricted).map((item) => {\r\n    let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n    let id = `${item.courseNum}`;\r\n    let checked = tabInfo.restricted.includes(id);\r\n\r\n    return (\r\n      <FormControlLabel\r\n        key={id}\r\n        //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n        component={'span'}\r\n        label={label}\r\n        control={\r\n          <Checkbox \r\n            id={id} \r\n            checked={checked} \r\n            value={item} \r\n            onChange={handleChange}\r\n          />}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        my: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Restricted Courses</Typography>\r\n      <Typography>\r\n        Select restricted courses that you plan on taking\r\n      </Typography>\r\n      <FormGroup>{options}</FormGroup>\r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport FormHelperText from \"@mui/material/FormLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { useEffect } from \"react\";\r\nimport certificates from \"../../../data/Certificates.json\";\r\n\r\nexport default function DegreePath({ tabInfo, setTabInfo }) {\r\n  const handleChangeCert = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.certificates.slice();\r\n      newArray.push(e.target.value);\r\n      const newTabInfo = { ...tabInfo, certificates: newArray };\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.certificates.slice();\r\n      let filteredArray = newArray.filter((item) => item !== e.target.value);\r\n      const newTabInfo = { ...tabInfo, certificates: filteredArray };\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  };\r\n\r\n  const handleChangeDeg = (e) => {\r\n    const newTabInfo = { ...tabInfo, degreePath: e.target.value };\r\n    setTabInfo(newTabInfo);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"checkedItemsDegPath: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  const error =\r\n    tabInfo.degreePath === \"certificate\" && tabInfo.certificates.length < 1;\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Degree paths</Typography>\r\n      <Typography>Please select your desired degree path.</Typography>\r\n      <FormLabel component=\"legend\">Degree Path:</FormLabel>\r\n      <RadioGroup defaultValue=\"traditional\" name=\"type-path-group\">\r\n        <FormControlLabel\r\n          value=\"traditional\"\r\n          checked={tabInfo.degreePath === \"traditional\"}\r\n          control={<Radio onChange={handleChangeDeg} />}\r\n          label=\"Traditional\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"professional\"\r\n          checked={tabInfo.degreePath === \"professional\"}\r\n          control={<Radio onChange={handleChangeDeg} />}\r\n          label=\"Professional\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"certificate\"\r\n          checked={tabInfo.degreePath === \"certificate\"}\r\n          control={<Radio onChange={handleChangeDeg} />}\r\n          label=\"Certificate\"\r\n        />\r\n      </RadioGroup>\r\n      <FormControl\r\n        required={tabInfo.degreePath === \"certificate\"}\r\n        error={error}\r\n        component=\"fieldset\"\r\n        variant=\"standard\"\r\n      >\r\n        <FormLabel component=\"legend\">Certificate Options:</FormLabel>\r\n\r\n        <FormGroup>\r\n          {certificates.map((item) => {\r\n            let checked = tabInfo.certificates.includes(item.value);\r\n\r\n            return (\r\n              <FormControlLabel\r\n                key={item.value}\r\n                component={\"span\"}\r\n                label={item.label}\r\n                control={\r\n                  <Checkbox\r\n                    checked={checked}\r\n                    value={item.value}\r\n                    onChange={handleChangeCert}\r\n                  />\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n        {error && (\r\n          <FormHelperText>\r\n            Please select at least one certificate\r\n          </FormHelperText>\r\n        )}\r\n      </FormControl>\r\n      <br></br>\r\n      <br></br>\r\n      <Typography variant=\"h5\" display=\"block\">\r\n        {\" \"}\r\n        Additional information can be found here:\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\">\r\n        <Link\r\n          target=\"_blank\"\r\n          href=\"http://www.umsl.edu/cmpsci/graduate-studies/graduate-degree-programs.html\"\r\n        >\r\n          {\" \"}\r\n          Click here for Graduate Degree Programs\r\n        </Link>\r\n      </Typography>\r\n      <Typography variant=\"overline\" display=\"block\">\r\n        <Link\r\n          target=\"_blank\"\r\n          href=\"http://www.umsl.edu/cmpsci/certificates/graduate-certificates.html\"\r\n        >\r\n          {\" \"}\r\n          Click here for Graduate Certificate Rules\r\n        </Link>\r\n      </Typography>\r\n    </Container>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\nimport CreditDialog from \"../../CreditDialog\";\r\n\r\nexport default function CompletedCourses({\r\n  tabInfo,\r\n  setTabInfo,\r\n  courseCredits,\r\n  setCourseCredits,\r\n}) {\r\n  const [creditOpen, setCreditOpen] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      //Copy to a new array and push the new item to it\r\n      //Then add the new array to the state object and update\r\n      //If there's a fancy way of doing this, please change it\r\n      let newArray = tabInfo.completed.slice();\r\n      newArray.push(e.target.id);\r\n      const newCompCourses = { ...tabInfo, completed: newArray };\r\n      setTabInfo(newCompCourses);\r\n\r\n      const credit = courses.filter(\r\n        (c) => String(c.courseNum) === String(e.target.id)\r\n      )[0].credits;\r\n\r\n      // set credits\r\n      if (typeof credit === \"string\") {\r\n        setCreditOpen(e.target.id);\r\n      } else {\r\n        let tempCredits = {\r\n          ...courseCredits,\r\n          [e.target.id]: courses.filter(\r\n            (c) => String(c.courseNum) === String(e.target.id)\r\n          )[0].credits,\r\n        };\r\n        setCourseCredits(tempCredits);\r\n      }\r\n    } else {\r\n      let newArray = tabInfo.completed.slice();\r\n      let filteredArray = newArray.filter((item) => item !== e.target.id);\r\n      const newCompCourses = { ...tabInfo, completed: filteredArray };\r\n      setTabInfo(newCompCourses);\r\n\r\n      // remove credits\r\n      let tempCredits = {\r\n        ...courseCredits,\r\n      };\r\n      delete tempCredits[e.target.id];\r\n      setCourseCredits(tempCredits);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      console.log(\"checkedItemsCompTab: \", tabInfo);\r\n    }\r\n  }, [tabInfo]);\r\n\r\n  const options = courses\r\n    .filter((v) => !v.restricted)\r\n    .map((item) => {\r\n      let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n      let id = `${item.courseNum}`;\r\n      let checked = tabInfo.completed.includes(id);\r\n\r\n      return (\r\n        <FormControlLabel\r\n          key={id}\r\n          //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n          component={\"span\"}\r\n          label={label}\r\n          control={\r\n            <Checkbox\r\n              id={id}\r\n              checked={checked}\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n          }\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <div>\r\n      <CreditDialog\r\n        open={creditOpen}\r\n        setOpen={setCreditOpen}\r\n        courseCredits={courseCredits}\r\n        setCourseCredits={setCourseCredits}\r\n      />\r\n      <Container\r\n        sx={{\r\n          marginTop: (theme) => theme.spacing(1),\r\n          padding: (theme) => theme.spacing(1),\r\n          marginBottom: (theme) => theme.spacing(1),\r\n        }}\r\n      >\r\n        <Typography variant=\"h2\">Completed and Transferred Courses</Typography>\r\n        <Typography>\r\n          Select courses already completed/in progress. All courses numbered\r\n          below 5000 must have been completed with a grade of at least B-.\r\n        </Typography>\r\n        <FormGroup>{options}</FormGroup>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport courses from \"../../../data/ClassInfo.json\";\r\nimport {\r\n  getRequiredCourses,\r\n  get6000Prereqs,\r\n} from \"../../../helper/rotationHelper\";\r\nimport _union from \"lodash/union\";\r\n\r\nexport default function WaivedCourses({ tabInfo, setTabInfo, csvData }) {\r\n  const handleChange = (e) => {\r\n    if (e.target.checked) {\r\n      let newArray = tabInfo.waived.slice();\r\n      newArray.push(e.target.id);\r\n      const newTabInfo = { ...tabInfo, waived: newArray };\r\n      setTabInfo(newTabInfo);\r\n    } else {\r\n      let newArray = tabInfo.waived.slice();\r\n      let filteredArray = newArray.filter((item) => item !== e.target.id);\r\n      const newTabInfo = { ...tabInfo, waived: filteredArray };\r\n      setTabInfo(newTabInfo);\r\n    }\r\n  };\r\n\r\n  // gather the required courses depending on degree paths chosen\r\n  let reqCourses = getRequiredCourses(tabInfo.degreePath, csvData);\r\n  tabInfo.certificates.forEach(\r\n    (c) => (reqCourses = _union(reqCourses, getRequiredCourses(c, csvData)))\r\n  );\r\n\r\n  // get all 6000 prereqs\r\n  reqCourses = _union(reqCourses, get6000Prereqs());\r\n\r\n  // filter the courses to what to display\r\n  const options = courses\r\n    .filter((v) => v.core || reqCourses.includes(\"\" + v.courseNum))\r\n    .map((item) => {\r\n      let label = `${item.subject} ${item.courseNum} - ${item.courseName}`;\r\n      let id = `${item.courseNum}`;\r\n      let checked = tabInfo.waived.includes(id);\r\n\r\n      return (\r\n        <FormControlLabel\r\n          key={id}\r\n          //To supress warnings about <div> cannot appear as a descendant of <p>.\r\n          component={\"span\"}\r\n          label={label}\r\n          control={\r\n            <Checkbox\r\n              id={id}\r\n              checked={checked}\r\n              value={item}\r\n              onChange={handleChange}\r\n            />\r\n          }\r\n        />\r\n      );\r\n    });\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Waived Courses</Typography>\r\n      <Typography>\r\n        Select waived courses already completed/in progress\r\n      </Typography>\r\n      <FormGroup>{options}</FormGroup>\r\n    </Container>\r\n  );\r\n}\r\n","import Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nconst MAX_TRANSFER_CREDITS = 9;\r\n\r\nexport default function TransferCredits({ tabInfo, setTabInfo }) {\r\n  const handleChange = (e) => {\r\n    if (Number(e.target.value) < 0 || !e.target.value) e.target.value = 0;\r\n    if (Number(e.target.value) > MAX_TRANSFER_CREDITS)\r\n      e.target.value = MAX_TRANSFER_CREDITS;\r\n    if (e.target.value.startsWith(\"0\"))\r\n      e.target.value = e.target.value.substring(1);\r\n    setTabInfo({ ...tabInfo, transfer: Number(e.target.value) });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        marginTop: (theme) => theme.spacing(1),\r\n        padding: (theme) => theme.spacing(1),\r\n        marginBottom: (theme) => theme.spacing(1),\r\n      }}\r\n    >\r\n      <Typography variant=\"h2\">Approved Transfered Credits</Typography>\r\n      <Typography\r\n        sx={{\r\n          marginTop: (theme) => theme.spacing(2),\r\n          marginBottom: (theme) => theme.spacing(3),\r\n        }}\r\n      >\r\n        Enter the number of transfer credits that you are approved for but do\r\n        not associate with a class in the Completed Courses. Maximum of{\" \"}\r\n        {MAX_TRANSFER_CREDITS} credits allowed.\r\n      </Typography>\r\n      <TextField\r\n        id=\"transfer-credits\"\r\n        label=\"# of Transfer Credits\"\r\n        type=\"number\"\r\n        value={tabInfo.transfer}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        onChange={handleChange}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Instructions from \"./Tabs/Instructions\";\r\nimport RestrictedCourses from \"./Tabs/RestrictedCourses\";\r\nimport DegreePath from \"./Tabs/DegreePath\";\r\nimport CompletedCourses from \"./Tabs/CompletedCourses\";\r\nimport WaivedCourses from \"./Tabs/WaivedCourses\";\r\nimport TransferCredits from \"./Tabs/TransferCredits\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: \"0.5rem\" }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function QuestionTabs({\r\n  tabInfo,\r\n  setTabInfo,\r\n  csvData,\r\n  courseCredits,\r\n  setCourseCredits,\r\n}) {\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          <Tab label=\"Instructions\" {...a11yProps(0)} />\r\n          <Tab label=\"Degree Paths\" {...a11yProps(1)} />\r\n          <Tab label=\"Restricted Courses\" {...a11yProps(2)} />\r\n          <Tab label=\"Completed Courses\" {...a11yProps(3)} />\r\n          <Tab label=\"Waived Courses\" {...a11yProps(4)} />\r\n          <Tab label=\"Transfer Credits\" {...a11yProps(5)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        <Instructions />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <DegreePath tabInfo={tabInfo} setTabInfo={setTabInfo} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <RestrictedCourses tabInfo={tabInfo} setTabInfo={setTabInfo} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <CompletedCourses\r\n          tabInfo={tabInfo}\r\n          setTabInfo={setTabInfo}\r\n          courseCredits={courseCredits}\r\n          setCourseCredits={setCourseCredits}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <WaivedCourses\r\n          tabInfo={tabInfo}\r\n          setTabInfo={setTabInfo}\r\n          csvData={csvData}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        <TransferCredits tabInfo={tabInfo} setTabInfo={setTabInfo} />\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import { Switch, Route, Link as RouterLink, Redirect } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Planner from \"./Planner/Planner\";\r\nimport QuestionTabs from \"./Questions/QuestionTabs\";\r\nimport { getAvailableClasses, csvClasses } from \"../helper/rotationHelper.js\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nexport default function AdvisorRouter() {\r\n  let tabInfoInitial = {\r\n    degreePath: \"traditional\",\r\n    certificates: [],\r\n    completed: [],\r\n    restricted: [],\r\n    waived: [],\r\n    transfer: 0,\r\n  };\r\n  const [data, setData] = useState(null);\r\n  const [tabInfo, setTabInfo] = useState(tabInfoInitial);\r\n  const [csvData, setCsvData] = useState(null);\r\n  const [year, setYear] = useState(null);\r\n  const [courseCredits, setCourseCredits] = useState([]);\r\n  const [instructionModal, setInstructionModal] = useState(true);\r\n\r\n  //Filter out courses\r\n  useEffect(() => {\r\n    getAvailableClasses().then((data) => setData(data));\r\n    csvClasses().then((data) => setCsvData(data));\r\n  }, []);\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/planner\">\r\n        {data ? (\r\n          <Planner\r\n            data={data}\r\n            setData={setData}\r\n            csvData={csvData}\r\n            tabInfo={tabInfo}\r\n            year={year}\r\n            setYear={setYear}\r\n            courseCredits={courseCredits}\r\n            setCourseCredits={setCourseCredits}\r\n            instructionModal={instructionModal}\r\n            setInstructionModal={setInstructionModal}\r\n          />\r\n        ) : null}\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n          }}\r\n        >\r\n          <Button\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n            }}\r\n            variant=\"outlined\"\r\n            component={RouterLink}\r\n            to=\"/planner\"\r\n          >\r\n            Course Planning\r\n          </Button>\r\n        </Box>\r\n        <QuestionTabs\r\n          tabInfo={tabInfo}\r\n          setTabInfo={setTabInfo}\r\n          csvData={csvData}\r\n          courseCredits={courseCredits}\r\n          setCourseCredits={setCourseCredits}\r\n        />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n","import Container from \"@mui/material/Container\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AdvisorRouter from \"./components/AdvisorRouter\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Breadcrumbs } from \"@mui/material\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\n\r\nfunction formatTitle(title) {\r\n  if (!title) return \"Dashboard\";\r\n  return title.charAt(0).toUpperCase() + title.slice(1);\r\n}\r\n\r\nconst LinkRouter = (props) => <Link {...props} component={RouterLink} />;\r\n\r\nexport default function App() {\r\n  const { pathname } = useLocation();\r\n  const pathnames = pathname.split(\"/\").filter((x) => x);\r\n\r\n  return (\r\n    <Container maxWidth={false}>\r\n      <Paper\r\n        sx={{\r\n          marginTop: (theme) => theme.spacing(1),\r\n          padding: (theme) => theme.spacing(1),\r\n          backgroundColor: (theme) => theme.palette.grey[700],\r\n        }}\r\n      >\r\n        <Paper\r\n          sx={{\r\n            marginTop: (theme) => theme.spacing(1),\r\n            padding: (theme) => theme.spacing(1),\r\n            marginBottom: (theme) => theme.spacing(1),\r\n            backgroundColor: (theme) => theme.palette.background.umslRed,\r\n          }}\r\n        >\r\n          <Typography variant=\"h1\">MS Advisor</Typography>\r\n        </Paper>\r\n        <Breadcrumbs>\r\n          <LinkRouter\r\n            underline=\"hover\"\r\n            to=\"/\"\r\n            sx={{ color: (theme) => theme.text.secondary }}\r\n          >\r\n            Questions\r\n          </LinkRouter>\r\n          {pathnames.map((value, index) => {\r\n            const last = index === pathnames.length - 1;\r\n            const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\r\n            return last ? (\r\n              <Typography\r\n                color=\"text.primary\"\r\n                key={to}\r\n                sx={{ color: (theme) => theme.text.secondary }}\r\n              >\r\n                {formatTitle(value)}\r\n              </Typography>\r\n            ) : (\r\n              <LinkRouter underline=\"hover\" color=\"inherit\" to={to} key={to}>\r\n                {formatTitle(value)}\r\n              </LinkRouter>\r\n            );\r\n          })}\r\n        </Breadcrumbs>\r\n\r\n        <Paper\r\n          sx={{\r\n            marginTop: (theme) => theme.spacing(1),\r\n            padding: (theme) => theme.spacing(1),\r\n            marginBottom: (theme) => theme.spacing(1),\r\n          }}\r\n        >\r\n          <AdvisorRouter />\r\n        </Paper>\r\n      </Paper>\r\n    </Container>\r\n  );\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\r\nimport \"typeface-roboto\";\r\n\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n    background: {\r\n      umslRed: \"#981e32\",\r\n    },\r\n  },\r\n  typography: {\r\n    h1: {\r\n      fontSize: \"4rem\",\r\n      color: \"white\",\r\n    },\r\n    h2: {\r\n      fontSize: \"2.5rem\",\r\n    },\r\n    h3: {\r\n      fontSize: \"1.78rem\",\r\n    },\r\n    h4: {\r\n      fontSize: \"1.3rem\",\r\n    },\r\n  },\r\n  text: {\r\n    primary: \"white\",\r\n    secondary: \"white\",\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Router>\r\n        <CssBaseline />\r\n        <App />\r\n      </Router>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);\r\n"],"sourceRoot":""}